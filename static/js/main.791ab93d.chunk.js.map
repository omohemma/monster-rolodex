{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["CardComponent","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBoxComponent","placeholder","HandleChange","type","onChange","App","handleChange","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uUAEaA,EAAgB,SAACC,GAC5B,OAAO,sBAAKC,UAAU,iBAAf,UACL,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAKL,EAAMG,QAAQG,OAC/F,6BAAKN,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,YCDTC,EAAW,SAACR,GACvB,OAAQ,qBAAKC,UAAU,YAAf,SAEJD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OAAI,cAAC,EAAD,CAAgCA,QAASA,GAArBA,EAAQC,UCPlDO,G,MAAqB,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aAChD,OAAO,uBAAOZ,UAAU,SAASa,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MC0CtEG,E,kDApCX,aAAe,IAAD,8BACV,gBAOJC,aAAe,SAACC,GACd,EAAKC,SAAS,CAACC,YAAcF,EAAEG,OAAOC,SAPpC,EAAKC,MAAQ,CACZd,SAAW,GACVW,YAAc,IAJN,E,qDAYd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACV,SAAWmB,S,oBAG/C,WAEE,MAAgCC,KAAKN,MAA9Bd,EAAP,EAAOA,SAAUW,EAAjB,EAAiBA,YACXU,EAAmBrB,EAASsB,QAAO,SAAA5B,GAAO,OAAIA,EAAQG,KAAK0B,cAAcC,SAASb,EAAYY,kBAEpG,OACQ,sBAAK/B,UAAU,MAAf,UACE,mDACA,cAAC,EAAD,CAAoBW,YAAY,kBAAkBC,aAAcgB,KAAKZ,eACrE,cAAC,EAAD,CAAUR,SAAUqB,W,GA5BhBI,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.791ab93d.chunk.js","sourcesContent":["import './card.styles.css'\r\n\r\nexport const CardComponent = (props) => {\r\n  return <div className='card-container'>\r\n    <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt={props.monster.name}/>\r\n    <h2>{props.monster.name}</h2>\r\n    <p>{props.monster.email}</p>\r\n  </div>\r\n}","import './card-list.styles.css'\r\nimport {CardComponent} from \"../card/card.component\";\r\n\r\n// Houses The cards which is received by props - like slot in vue.js\r\n// Receives props from Parent and passes to Card Component\r\nexport const CardList = (props) => {\r\n  return  <div className=\"card-list\">\r\n    {\r\n      props.monsters.map(monster => <CardComponent key={monster.id} monster={monster}/>)\r\n    }\r\n  </div>\r\n}","import './search-box.styles.css'\r\nexport const  SearchBoxComponent = ({placeholder, HandleChange}) => {\r\n  return <input className='search' type=\"search\" placeholder={placeholder} onChange={HandleChange}/>\r\n}","// import logo from './logo.svg';\nimport './App.css';\nimport {Component} from \"react\";\nimport {CardList} from \"./components/card-list/card-list.component\";\nimport {SearchBoxComponent} from \"./components/search-box/search-box.component\";\n\n\nclass App extends Component{\n    constructor() {\n        super();\n        this.state = {\n         monsters : [],\n          searchField : \"\"\n        }\n    }\n\n    handleChange = (e) => {\n      this.setState({searchField : e.target.value})\n    }\n\n    componentDidMount() {\n      fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => response.json())\n        .then(users => this.setState({monsters : users}))\n    }\n\n  render() {\n      // Destructuring - Remember we don't mutate the state directly\n    const {monsters, searchField} = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()));\n\n    return (\n            <div className=\"App\">\n              <h1>Monsters Rolodox </h1>\n              <SearchBoxComponent placeholder='Search Monsters' HandleChange={this.handleChange}/>\n              <CardList monsters={filteredMonsters} >\n              </CardList>\n            </div>\n        )\n  }\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'; // to write JSx in javascript file\nimport ReactDOM from 'react-dom'; // to interact DOM to effect the state changes in our app\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}